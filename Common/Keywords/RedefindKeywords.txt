*** Settings ***
Library           Selenium2Library    timeout=120    run_on_failure=Nothing
Library           ../../Library/Web/WebManeger.py
Resource          RunOnFailKeywords.txt
Library           Collections
Library           String
Library           OperatingSystem

*** Variables ***
${Lang}           ${ar_LANG}

*** Keywords ***
Click Web Element
    [Arguments]    ${locator}    ${timeout}=${lo_general_timeout}
    ${result}    Run Keyword And Return Status    Wait Web Until Page Element Visible    ${locator}    ${timeout}
    Run Keyword If    '${result}'=='False'    Wait Web Until Page Contains Element    ${locator}    ${timeout}
    Selenium2Library.Click Element    ${locator}

Click Web Button
    [Arguments]    ${locator}    ${timeout}=${lo_general_timeout}
    ${result}    Run Keyword And Return Status    Wait Web Until Page Element Visible    ${locator}    ${timeout}
    Run Keyword If    '${result}'=='False'    Wait Web Until Page Contains Element    ${locator}    ${timeout}
    Selenium2Library.Click Button    ${locator}

Input Web Text
    [Arguments]    ${locator}    ${text}    ${timeout}=${lo_general_timeout}
    ${result}    Run Keyword And Return Status    Wait Web Until Page Element Visible    ${locator}    ${timeout}
    Run Keyword If    '${result}'=='False'    Wait Web Until Page Contains Element    ${locator}    ${timeout}
    Selenium2Library.Input Text    ${locator}    ${text}

Web Element Should Be Disabled
    [Arguments]    ${locator}    ${timeout}=${lo_general_timeout}
    Wait Web Until Page Element Visible    ${locator}    ${timeout}
    Selenium2Library.Element Should Be Disabled    ${locator}

Web Element Should Be Enabled
    [Arguments]    ${locator}    ${timeout}=${lo_general_timeout}
    Wait Web Until Page Element Visible    ${locator}    ${timeout}
    Selenium2Library.Element Should Be Enabled    ${locator}

Wait Web Until Page Contains Element
    [Arguments]    ${locator}    ${timeout}=${lo_general_timeout}
    Selenium2Library.Wait Until Page Contains Element    ${locator}    ${timeout}

Wait Web Until Page Element Visible
    [Arguments]    ${locator}    ${timeout}=${lo_general_timeout}
    Selenium2Library.Wait Until Element Is Visible    ${locator}    ${timeout}

Get Web Elements
    [Arguments]    ${locator}
    ${elements}    Selenium2Library.Get Webelements    ${locator}
    [Return]    ${elements}

Get Web Text
    [Arguments]    ${locator}    ${timeout}=${lo_general_timeout}
    ${result}    Run Keyword And Return Status    Wait Web Until Page Element Visible    ${locator}    ${timeout}
    Run Keyword If    '${result}'=='False'    Wait Web Until Page Contains Element    ${locator}    ${timeout}
    ${Text}    Selenium2Library.Get Text    ${locator}
    [Return]    ${Text}

Web Element Should Be Visible
    [Arguments]    ${locator}    ${timeout}=${lo_general_timeout}
    Wait Web Until Page Element Visible    ${locator}    ${timeout}
    Selenium2Library.Element Should Be Visible    ${locator}

Web Element Text Should Be
    [Arguments]    ${locator}    ${text}    ${timeout}=${lo_general_timeout}
    Selenium2Library.Wait Until Element Contains    ${locator}    ${text}    ${timeout}
    Wait Web Until Page Element Visible    ${locator}    ${timeout}
    Selenium2Library.Element Text Should Be    ${locator}    ${text}

Select From Web List
    [Arguments]    ${locator}    ${text}    ${timeout}=${lo_general_timeout}
    Wait Web Until Page Element Visible    ${locator}    ${timeout}
    Selenium2Library.Select From List    ${locator}    ${text}

Select From Web List By Value
    [Arguments]    ${locator}    ${Value}    ${timeout}=${lo_general_timeout}
    Wait Web Until Page Element Visible    ${locator}    ${timeout}
    Selenium2Library.Select From List By Value    ${locator}    ${Value}

Select From Web List By Label
    [Arguments]    ${locator}    ${label}    ${timeout}=${lo_general_timeout}
    Wait Web Until Page Element Visible    ${locator}    ${timeout}
    Selenium2Library.Select From List By Label    ${locator}    ${label}

Click Web Image
    [Arguments]    ${locator}    ${timeout}=${lo_general_timeout}
    ${result}    Run Keyword And Return Status    Wait Web Until Page Element Visible    ${locator}    ${timeout}
    Run Keyword If    '${result}'=='False'    Wait Web Until Page Contains Element    ${locator}    ${timeout}
    Selenium2Library.Click Image    ${locator}

Register Keyword For Run On Failure
    Selenium2Library.Register Keyword To Run On Failure    all keyword to run on fail

Capture ScreenShot
    ${screenshot_index}=    Get Variable Value    ${screenshot_index}    ${0}
    Set Global Variable    ${screenshot_index}    ${screenshot_index.__add__(1)}
    @{SplitTestSuite}    Split String    ${SUITE_NAME}    .
    ${Test}    Run Keyword If    '${ar_RUN}'=='pabot'    Set Variable    @{SplitTestSuite}[0]
    ...    ELSE    Set Variable    @{SplitTestSuite}[0]
    @{SplitTestCase}    Split String    ${TEST_NAME}    _
    ${numberTestCase}    Set Variable    @{SplitTestCase}[0]
    Selenium2Library.Capture Page Screenshot    screenshot-Selenium-${Test}-${numberTestCase}-${Lang}-${ar_testType}-${screenshot_index}.png

Open Web Browser
    [Arguments]    ${url}    ${Browser}    ${ipSelenium}
    ${orig wait} =    Set Selenium Implicit Wait    60 seconds
    Run Keyword If    '${Browser}' == 'gc'    start chrome browser    ${url}    ${Browser}    ${ipSelenium}    ${lo_path_chrome_extension}
    ...    ${lo_IPWhiteList}
    Run Keyword If    '${Browser}' == 'ff'    start firefox browser    ${url}    ${Browser}    ${ipSelenium}    ${lo_ff_profile}
    Run Keyword If    '${Browser}' == 'ie'    start ie browser    ${url}    ${Browser}    ${ipSelenium}
    Run Keyword If    '${Browser}' == 'phantomjs'    Open Browser    ${url}    ${Browser}    remote_url=${ipSelenium}
    Set Selenium Implicit Wait    ${orig wait}

start chrome browser
    [Arguments]    ${url}    ${Browser}    ${ipSelenium}    @{args}
    ${options}=    SetChromeOption    @{args}[0]
    Selenium2Library.Open Browser    chrome://extensions/    ${Browser}    remote_url=${ipSelenium}    desired_capabilities=${options}
    Comment    Set Browser Implicit Wait    20 seconds
    Selenium2Library.Go To    chrome-extension://idgpnmonknjnojddfkpgkljpfnnfcklj/icon.png
    Selenium2Library.Execute Javascript    localStorage.setItem('profiles', JSON.stringify([{title: 'Selenium', hideComment: true, appendMode: '',headers: [{enabled: true, name: 'X-Forwarded-For', value: '@{args}[1]', comment: ''}],respHeaders: [],filters: []}]));
    Selenium2Library.Go To    ${url}

start firefox browser
    [Arguments]    ${url}    ${Browser}    ${ipSelenium}    ${ff_profile}
    Comment    ${userprofile}=    Evaluate    sys.modules['os'].environ['userprofile']    sys, os
    Comment    ${ff_profile}=    Set Variable    ${userprofile}\\AppData\\Roaming\\Mozilla\\Firefox\\Profiles
    Comment    ${capabilities}    Evaluate    sys.modules['selenium.webdriver'].common.desired_capabilities.DesiredCapabilities.FIREFOX    sys,selenium.webdriver
    Selenium2Library.Open Browser    ${url}    ${Browser}    remote_url=${ipSelenium}    ff_profile_dir=${ff_profile}

start ie browser
    [Arguments]    ${url}    ${Browser}    ${ipSelenium}
    Selenium2Library.Open Browser    ${url}    ${Browser}    remote_url=${ipSelenium}

Open Firefox Browser
    [Arguments]    ${url}
    ${userprofile}=    Evaluate    sys.modules['os'].environ['userprofile']    sys, os
    ${ff_profile}=    Set Variable    ${userprofile}\\AppData\\Roaming\\Mozilla\\Firefox\\Profiles
    ${capabilities}    Evaluate    sys.modules['selenium.webdriver'].common.desired_capabilities.DesiredCapabilities.FIREFOX    sys,selenium.webdriver
    Open Browser    ${url}    ff_profile_dir=${ff_profile}

Close Firefox Browser
    Evaluate    sys.modules['os'].system('taskkill /f /im plugin-container.exe')    sys, os
    Selenium2Library.Close Browser

Scroll Web To Element
    [Arguments]    ${locator}
    Wait Web Until Page Element Visible    ${locator}
    ${target}    Get Vertical Position    ${locator}
    ${width}    ${height}    Get Element Size    ${locator}
    ${element}    Evaluate    ${target}-150
    Run Keyword If    ${element}<0    Execute JavaScript    window.scrollTo(0, 0)
    ...    ELSE    Execute JavaScript    window.scrollTo(0, ${element})

Web Element Regexp Matches
    [Arguments]    ${expect}    ${actual}
    Wait Web Until Page Element Visible    ${expect}
    Get Regexp Matches    ${expect}    ${actual}
    Log    ${expect}
    Log    ${actual}

Should Be Text In Element
    [Arguments]    ${locator}
    Wait Web Until Page Element Visible    ${locator}
    Should Not Be Empty    ${locator}

Web Get Element Attribute
    [Arguments]    ${locator}    ${attribute}
    Wait Web Until Page Element Visible    ${locator}
    ${arg}    Get Element Attribute    ${locator}@${attribute}
    [Return]    ${arg}
